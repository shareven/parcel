package com.xxxx.parcel.util

import android.util.Log
import java.util.regex.Matcher
import java.util.regex.Pattern

class SmsParser {
    // 使用正则表达式来匹配地址和取件码（1个或多个取件码）
    private val addressPattern: Pattern =
        Pattern.compile("""(?i)(地址|收货地址|送货地址|位于|已到达|到达|已到|送达|到)[\s\S]*?([\w\s-]+?(?:巷|号|门牌|楼|栋|单元|室|铺|驿站|部|小区|快递|,|，|。|$)\d*)""")
    private val codePattern: Pattern = Pattern.compile(
        """(?i)(取件码|取货码|提货码|凭|快递|京东|天猫|中通|顺丰|韵达|德邦|菜鸟|拼多多|EMS|闪送|美团|饿了么|盒马|叮咚买菜|UU跑腿|代收|寄存|寄件|收件|派送|配送|签收|签收码|签收编号|签收单号|物流单号|订单编号|订单号|运单号|运单编号|快递编号|快递单号|快件编号|快件单号|包裹编号|包裹单号|货品编号|货品ID|商品编号|商品ID|物品编号|物品ID|商品货号|货品货号|物品货号|货品编号|商品编号|商品ID|商品编码|商品序号|序列号|编号|ID|编码|序号|号码|码|验证码|操作码|操作编号|操作ID|操作编码|操作序号|操作号码|操作码|取件编号|取件ID|取件编码|取件序号|取件号码|提货编号|提货ID|提货编码|提货序号|提货号码|领货编号|领货ID|领货编码|领货序号|领货号码|收货编号|收货ID|收货编码|收货序号|收货号码|寄件编号|寄件ID|寄件编码|寄件序号|寄件号码|寄出编号|寄出编码|寄出序号|寄出号码|派送编号|派送ID|派送编码|派送序号|派送号码|配送编号|配送ID|配送编码|配送序号|配送号码|签收编号|签收ID|签收编码|签收序号|签收号码|物流编号|物流ID|物流编码|物流序号|物流号码|订单码|订单ID|订单编码|订单序号|订单号码|运单码|运单ID|运单编码|运单序号|运单号码|快递码|快递ID|快递编码|快递序号|快递号码|快件码|快件ID|快件编码|快件序号|快件号码|包裹码|包裹ID|包裹编码|包裹序号|包裹号码|货品码|货品ID|货品编码|货品序号|货品号码|商品码|商品ID|商品编码|商品序号|商品号码|物品码|物品ID|物品编码|物品序号|物品号码|取件码|取货码|提货码|凭|快递|天猫|中通|顺丰|韵达|德邦|菜鸟|拼多多|EMS|闪送|美团|饿了么|盒马|叮咚买菜|UU跑腿|代收|寄存|寄件|收件|派送|配送|签收|签收码|签收编号|签收单号|物流单号|订单编号|订单号|运单号|运单编号|快递编号|快递单号|快件编号|快件单号|包裹编号|包裹单号|货品编号|货品ID|商品编号|商品ID|物品编号|物品ID|商品货号|货品货号|物品货号|货品번호|商品编号|商品ID|商品编码|商品序号|序列号|번호|ID|编码|序号|号码|码|验证码|密码|口令|指令|命令|操作码|操作编号|操作ID|操作编码|操作序号|操作号码|操作码|取件编号|取件ID|取件编码|取件序号|取件号码|提货编号|提货ID|提货编码|提货序号|提货号码|领货编号|领货ID|领货编码|領货序号|領货号码|收货编号|收货ID|收货编码|收货序号|收货号码|寄件编号|寄件ID|寄件编码|寄件序号|寄件号码|寄出编号|寄出ID|寄出编码|寄出序号|寄出号码|派送编号|派送ID|派送编码|派送序号|派送号码|配送编号|配送ID|配送编码|配送序号|配送号码|签收编号|签收ID|签收编码|签收序号|签收号码|物流编号|物流ID|物流编码|物流序号|物流号码|订单碼|订单ID|订单編碼|订单序号|订单号码|運單碼|運單ID|運單編碼|運單序号|運單号码|快件碼|快件ID|快件編碼|快件序号|快件号码|包裹碼|包裹ID|包裹編碼|包裹序号|包裹号码|貨品碼|貨品ID|貨品編碼|貨品序号|貨品号码|商品碼|商品ID|商品編碼|商品序号|商品号码|物品碼|物品ID|物品編碼|物品序号|物品号码|取件碼|取貨碼|提貨碼|憑|快遞|京東|天貓|中通|順豐|韻達|德邦|菜鳥|拼多多|EMS|閃送|美團|餓了么|盒馬|叮咚買菜|UU跑腿|代收|寄存|寄件|收件|派送|配送|簽收|簽收碼|簽收編號|簽收單號|物流單號|訂單編號|訂單號|運單號|運單編號|快遞編號|快遞單號|快件編號|快件單號|包裹編號|包裹單號|貨品編號|貨品ID|商品編號|商品ID|物品編號|物品ID|商品貨號|貨品貨號|物品貨號|貨品編號|商品編號|商品ID|商品編碼|商品序號|序列號|編號|ID|編碼|序號|號碼|碼|驗證碼|密碼|口令|指令|命令|操作碼|操作編號|操作ID|操作編碼|操作序號|操作號碼|操作碼|取件編號|取件ID|取件編碼|取件序號|取件號碼|提貨編號|提貨ID|提貨編碼|提貨序號|提貨號碼|領貨編號|領貨ID|領貨編碼|領貨序號|領貨號碼|收貨編號|收貨ID|收貨編碼|收貨序號|收貨號碼|寄件編號|寄件ID|寄件編碼|寄件序號|寄件號碼|寄出編號|寄出ID|寄出編碼|寄出序號|寄出號碼|派送編號|派送ID|派送編碼|派送序號|派送號碼|配送編號|配送ID|配送編碼|配送序號|配送號碼|簽收編號|簽收ID|簽收編碼|簽收序號|簽收號碼|物流編號|物流ID|物流編碼|物流序號|物流號碼|訂單碼|訂單ID|訂單編碼|訂單序號|訂單號|運單碼|運單ID|運單編碼|運單序號|運單號|快遞碼|快遞ID|快遞編碼|快遞序號|快遞號碼|快件碼|快件ID|快件編碼|快件序號|快件號碼|包裹碼|包裹ID|包裹編碼|包裹序號|包裹號碼|貨品碼|貨品ID|貨品編碼|貨品序號|貨品號|商品碼|商品ID|商品編碼|商品序號|商品號|物品碼|物品ID|物品編碼|物品序號|物品號|取件碼|取貨碼|提貨碼|憑|快遞|京東|天貓|中通|順豐|韻達|德邦|菜鳥|拼多多|EMS|閃送|美團|餓了么|盒馬|叮咚買菜|UU跑腿|代收|寄存|寄件|收件|派送|配送|簽收|簽收碼|簽收編號|簽收單號|物流單號|訂單編號|訂單號|運單號|운單編號|快遞編號|快遞單號|快件編號|快件單號|包裹編號|包裹單號|貨品編號|貨品ID|商品編號|商品ID|物品編號|物品ID|商品貨號|貨品貨號|物品貨號|貨品編號|商品編號|商品ID|商品編碼|商品序號|序列號|編號|ID|編碼|序號|號碼|碼|驗證碼|密碼|口令|指令|命令|操作碼|操作編號|操作ID|操作編碼|操作序號|操作號碼|操作碼|取件編號|取件ID|取件編碼|取件序號|取件號碼|提貨編號|提貨ID|提貨編碼|提貨序號|提貨號碼|領貨編號|領貨ID|領貨編碼|領貨序號|領貨號碼|收貨編號|收貨ID|收貨編碼|收貨序號|收貨號碼|寄件編號|寄件ID|寄件編碼|寄件序號|寄件號碼|寄出編號|寄出ID|寄出編碼|寄出序號|寄出號碼|派送編號|派送ID|派送編碼|派送序號|派送號碼|配送編號|配送ID|配送編碼|配送序號|配送號碼|簽收編號|簽收ID|簽收編碼|簽收序號|簽收號碼|物流編號|物流ID|物流編碼|物流序號|物流號碼|訂單碼|訂單ID|訂單編碼|訂單序號|訂單號|運單碼|운單ID|운單編碼|운單序號|운單號|快遞碼|快遞ID|快遞編碼|快遞序號|快遞號碼|快件碼|快件ID|快件編碼|快件序號|快件號碼|包裹碼|包裹ID|包裹編碼|包裹序號|包裹號碼|貨品碼|貨品ID|貨品編碼|貨품序號|貨품號|商品碼|商品ID|商品編碼|商品序號|商品號|物品碼|物品ID|物品編碼|物品序號|物品號|取件碼|取貨碼|提貨碼|憑|快遞|京東|天貓|中通|順豐|韻達|德邦|菜鳥|拼多多|EMS|閃送|美團|餓了么|盒馬|叮咚買菜|UU跑腿|代收|寄存|寄件|收件|派送|配送|簽收|簽收碼|簽收編號|簽收單號|物流單號|訂單編號|訂單號|운單號|운單編號|快遞編號|快遞單號|快件編號|快件單號|包裹編號|包裹單號|貨品編號|貨品ID|商品編號|商品ID|物品編號|物品ID|商品貨號|貨品貨號|物品貨號|貨品編號|商品編號|商品ID|商品編碼|商品序號|序列號|編號|ID|編碼|序號|號碼|碼|驗證碼|密碼|口令|指令|命令|操作碼|操作編號|操作ID|操作編碼|操作序號|操作號碼|操作碼|取件編號|取件ID|取件編碼|取件序號|取件號碼|提貨編號|提貨ID|提貨編碼|提貨序號|提貨號碼|領貨編號|領貨ID|領貨編碼|領貨序號|領貨號碼|收貨編號|收貨ID|收貨編碼|收貨序號|收貨號碼|寄件編號|寄件ID|寄件編碼|寄件序號|寄件號碼|寄出編號|寄出ID|寄出編碼|寄出序號|寄出號碼|派送編號|派送ID|派送編碼|派送序號|派送號碼|配送編號|配送ID|配送編碼|配送序號|配送號碼|簽收編號|簽收ID|簽收編碼|簽收序號|簽收號碼|物流編號|物流ID|物流編碼|物流序號|物流號碼|訂單碼|訂單ID|訂單編碼|訂單序號|訂單號|운單碼|운單ID|운單編碼|운單序號|운單號|快遞碼|快遞ID|快遞編碼|快遞序號|快遞號碼|快件碼|快件ID|快件編碼|快件序號|快件號碼|包裹碼|包裹ID|包裹編碼|包裹序號|包裹號碼|貨品碼|貨品ID|貨品編碼|貨품序號|貨품號|商品碼|商品ID|商品編碼|商品序號|商品號|物品碼|物品ID|物品編碼|物品序號|物品號|取件碼|取貨碼|提貨碼|憑|快递|天猫|中通|顺丰|韵达|德邦|菜鸟|拼多多|EMS|闪送|美团|饿了么|盒马|叮咚买菜|UU跑腿|代收|寄存|寄件|收件|派送|配送|签收|签收码|签收编号|签收单号|物流单号|订单编号|订单号|运单号|运单编号|快递编号|快递单号|快件编号|快件单号|包裹编号|包裹单号|货品编号|货品ID|商品编号|商品ID|物品编号|物品ID|商品货号|货品货号|物品货号|货品编号|商品编号|商品ID|商品编码|商品序号|序列号|编号|ID|编码|序号|号码|码|验证码|密码|口令|指令|命令|操作码|操作编号|操作ID|操作编码|操作序号|操作号码|操作码|取件编号|取件ID|取件编码|取件序号|取件号码|提货编号|提货ID|提货编码|提货序号|提货号码|领货编号|领货ID|领货编码|领货序号|领货号码|收货编号|收货ID|收货编码|收货序号|收货号码|寄件编号|寄件ID|寄件编码|寄件序号|寄件号码|寄出编号|寄出ID|寄出编码|寄出序号|寄出号码|派送编号|派送ID|派送编码|派送序号|派送号码|配送编号|配送ID|配送编码|配送序号|配送号码|签收编号|签收ID|签收编码|签收序号|签收号码|物流编号|物流ID|物流编码|物流序号|物流号码|订单码|订单ID|订单编码|订单序号|订单号码|运单码|运单ID|运单编码|运单序号|运单号码|快递码|快递ID|快递编码|快递序号|快递号码|快件码|快件ID|快件编码|快件序号|快件号码|包裹码|包裹ID|包裹编码|包裹序号|包裹号码|货品码|货품ID|货품编码|货품序号|货품号码|商品码|商品ID|商品编码|商品序号|商品号码|物品码|物品ID|物品编码|物品序号|物品号码)\s*[A-Za-z0-9\s-]{4,}(?:[，,、][A-Za-z0-9\s-]{4,})*"""
    )

    // 动态规则存储
    private val customAddressPatterns = mutableListOf<Pattern>()
    private val customCodePatterns = mutableListOf<Pattern>()


    data class ParseResult(val address: String, val code: String, val success: Boolean)

    fun parseSms(sms: String): ParseResult {
        var foundAddress = ""
        var foundCode = ""
        for (pattern in customAddressPatterns) {
            val matcher = pattern.matcher(sms)
            if (matcher.find()) {
                foundAddress = matcher.group(0)?.toString() ?: ""
                break
            }
        }

        for (pattern in customCodePatterns) {
            val matcher = pattern.matcher(sms)
            if (matcher.find()) {
                foundCode = matcher.group(1)?.toString() ?: ""
                break
            }
        }
        // 如果自定义规则没有找到，尝试使用默认规则

        if (foundAddress.isEmpty()) {
            val addressMatcher: Matcher = addressPattern.matcher(sms)
            foundAddress =
                if (addressMatcher.find()) addressMatcher.group(2)?.toString() ?: "" else ""
        }

        if (foundCode.isEmpty()) {
            val codeMatcher: Matcher = codePattern.matcher(sms)

            while (codeMatcher.find()) {
                val match = codeMatcher.group(0)
                // 进一步将匹配到的内容按分隔符拆分成单个取件码
                val codes = match?.split(Regex("[，,、]"))
                foundCode = codes?.joinToString(", ") { it.trim() }?:""
                foundCode = foundCode.replace(Regex("[^A-Za-z0-9-, ]"), "")
            }

        }
        foundAddress = foundAddress.replace(Regex("[,，。]"), "")  // 移除所有标点和符号
        return ParseResult(
            foundAddress,
            foundCode,
            foundAddress.isNotEmpty() && foundCode.isNotEmpty()
        )
    }

    // 添加自定义解析规则

    fun addCustomAddressPattern(pattern: String) {

        customAddressPatterns.add(Pattern.compile(pattern))
    }

    fun addCustomCodePattern(pattern: String) {
        customCodePatterns.add(Pattern.compile(pattern))
    }

    fun clearAllCustomPatterns() {
        customAddressPatterns.clear()
        customCodePatterns.clear()
    }
}